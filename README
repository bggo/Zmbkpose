This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.


############################# Zmbkpose ################################

The zmbkpose tool is a shell script that does hot backup and hot restore of ZCS
 Opensource accounts. It can run from any host in the net, 
which means that it can be set on a backup server already existent.

It was concepted after Zimbra released ZCS 5.0.12, where a new import/export 
feature was exposed to user can be able to do his archiving. From that point 
it was clear for me that I just need to write a code to automatically get all
 user data from server, remotely via HTTP SOAP. Plus LDAP data. So, it is 
possible to run full backups and restore even deleted accounts.

Till now, zmbkpose provides

    Full backup of any or all accounts, or distributions lists ;
    Incremental backup of any or all accounts;
    Lists all backup sessions done;
    Restore all contents (mail, contacts, appointments...) to any account;
    Restore deleted accounts back to directory and all of its contents;

################################################################################
################################################################################
          This tool DOES NOT DO disaster recovery. 
          Only accounts is in backups

          This tool works in a one server zimbra installation. DOES NOT SUPPORT
            MULTI SERVER zimbra deployment.
################################################################################
################################################################################


#######################################################################
# For installation instructions please read the INSTALL file.

#######################################################################
# About "rewrite_proposal_v2.0" :
 Zmbkpose is a great project.
 After using it, I started to need some features that were not available and I 
  wanted to add.

 By analyzing the code, from my point of view, there is a big problem that 
  requires a radical change in much of the code: Using a log file as metadata 
  to access the backups, which means you must hold a synchronization between 
  backup files, and archive logs. Differences between them would cause a big 
  problem.

 Use backup files directly, without additional metadata required so many 
  changes in the code, I was more simple rewrite and incorporate other needs 
  arising in my organization. Besides trying to make the code more efficient.

 Use backup files directly, without additional metadata is slower, but  
   but making an effort in the code for good performance.

 From my point of view rewriting code can be taken as offensive, and selfish. 
 This was not my intention, and I do not want to step on the original code zmbkpose.

 Zmbkpose programmers: If this code is offensive, please remove it.

 Thanks for giving me a solution to my open source zimbra installation.

#######################################################################
# "rewrite_proposal_v2.0" plans:
 I write this code for specific needs, and I try to manteint it occasionally.
 I have very little time to the project. I need help if you want to improve it.
 Watch file "Things_to_do.txt"

#######################################################################
# Usage:

Index:

  01 - How zmbkpose obtains data for backups?
  02 - How are backups stored?
  03 - Which is the backup content?
  04 - Usage instructions 
  05 - Usage recommendations 
  06 - Usage example
  07 - Restore


01 - How zmbkpose obtains data for backups?
   =============================================================================
   - Using import/export feature released in Zimbra ZCS 5.0.12 version, zmbkpose
     get backups data via http (using curl) in tar-gzip format as follow:

    $ curl -s -S -k -u $ADMINUSER:$ADMINPASS -o backup_file \
         "https://$mailhost:7071/home/$account/?fmt=tgz

    zmbkpose uses this form to make full account backups

   - Opcionally you can get a backup with the activity at last 60 minutes as follow:
    $ curl -s -S -k -u $ADMINUSER:$ADMINPASS -o backup_file \
         "https://$mailhost:7071/home/$account/?fmt=tgz&query=after:-60mi"

    zmbkpose uses this form to make incremental account backups

   - For details of syntax arguments in query, see docs/soap.txt in your zimbra
    install directory.


02 - How are backups stored?
   =============================================================================
   - The value of $WORKDIR variable in your /etc/zmbkpose.conf determine the root 
    directory for backups. 
   - In the WORKDIR directory, zmbkpose, create a directory for each account that has
    a bakcup.
   - In the account directory, the name of backups files are as follow:
     YYYYMMDDhhmmss:TYPE.tar
    where:
      _ YYYY is 4 digit year
      _ MM is 2 digit month
      _ DD is 2 digit day
      _ hh is 2 digit hour
      _ mm is 2 digit minute
      _ ss is 2 digit second
      _ TYPE is FULL for full backup, or INC for incremental backup

   - Inside of the tar file is as follows:
     acct.ldif   : ldap data
     mailbox.tgz : mail, contacts, appointments...


03 - Which is the backup content?
   =============================================================================
   Inside of the tar file described in "How are backups stored?" :

   - acct.ldif file, save ldap data for create the account. The data covers:
      _mailbox tree (mailbox ldap entry and identity entries)
      _mailbox alias(alias ldap entries)
 
     NOTE: when zmbkpose restores ldap entries, it add only the missing entries. 
           Entry differences, are not merged. We need help here

   - mailbox.tgz file, save  entire contents of a mailbox: mail, address book, 
      calendar, task, briefcase ...
     

04 - Usage instructions 
   =============================================================================

   a) Set up your file /etc/zmbkpose/zmbkpose.conf

   b) Begins doing a full backup for specific accounts
    $ zmbkpose -f -a email1 
    You'll get a full backup copy in $WORKDIR/email1/
    You can make a conditional full backup only if the previous backup has 
	 more than "time" old.
    $ zmbkpose -F time -a email1 
   
   c) Perform incremental backups.
    $ zmbkpose -i -a email1 
    This does not make much sense. Try to do incremental backups only if the 
     previous backup is too old.
    $ zmbkpose -I time -a email1 

    Where "time" is for example: "10hs" for 10 hours old , or "2d" for 2 days
	 old, or "1w" for 1 week old, so on .
    If you have no previous full backup, you can use "-t" in the same command 
	 to automatically run a full backup.
   
   d) Programme incremental backups for all accounts, even during the hours of 
       user activity. They are lightweight. Try to limit by execution time 
       (-C time), number of accounts (-cn). Try also add delay between each 
	   backup account (-e time).
    $ zmbkpose -I 30h -C 3h -e 5s
   
   e) Delete old backups.  Assume the following example of account daily backup
     day backup_type
     --- -----------
      1  FULL
      2  INC
      3  INC
      4  INC
      5  FULL
      6  INC
      7  INC
     and on the 7th day, run: 
     $ zmbkpose -a account -d 1d

     Note you want to remove backups older than 1 day, so try to delete the 
      copies of the days: 6,5,4,3,2, and 1 . This will leave inconsistent backups
	  to disk (deletes the full of day 5).
     Do not worry about it. zmbkpose will remove copies of the day: 4,3,2 and 1.
     If you run:
     $ zmbkpose -a account -d 4d: not will delete any backup.

05 - Usage recommendations 
   =============================================================================

   * I recommend doing full backups during the night and incremental backups
     throughout the day.

   * Perform as many incremental backups throughout the day as you need. Try not
     to overload the service. Try to limit by execution time (-C time), number
     of accounts (-cn). Try also add delay between each backup account (-e time).

   * Try the nightly backups do not continue as you begin daily activity, or while 
     performing incremental backups. Limits the nightly backup runtime (-C time).

   * Try to reduce the number of full backups, overload the service, and take up 
     space. Incremental backups are fast.

   * Do not run parallel backups (-p), worse service performance.

   * Eliminate unnecessary copies of backups (-d time)


06 - Usage example 
   =============================================================================

  It is my backup setup in a linux machine with 2400 Zimbra accounts, and 30 hours 
   (approx.) maximum time for each account without backup.

  * A wrapper script for stdout/stderr log redirections in 
     ./example/usr/local/bin/zmbkpose.backup.wrapper 
    This script write a log file in /var/log/zmbkpose in every execution 

  * A cron job executing the before wraper in 
     ./example/etc/cron.d/zimbra_mail_backup 
    This job run :
     - Full backups 
     - Incremental backups
     - Delete old backups
     - Delete old logs files

07 - Restore
   =============================================================================

  The restoration is on the mail account in which the backup was performed.
  There is no option to restore to another account. At least for now.
  This means that if you restore to an existing account, then this will be
    completed with the emails that are in the backup, and do not exist in the 
    account.
  If the account does not exist, this will be created.

